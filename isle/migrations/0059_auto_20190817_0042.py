# Generated by Django 2.0.7 on 2019-08-16 14:42

from django.db import migrations
from django.db.models import Count, F
from isle.models import Team as TeamModel


def set_uuid_for_uploads_teams(apps, schema):
    Team = apps.get_model('isle', 'Team')
    Team.objects.filter(system=TeamModel.SYSTEM_UPLOADS).update(uuid=F('id'))


def fix_team_duplicates(apps, schema):
    Team = apps.get_model('isle', 'Team')
    EventTeamMaterial = apps.get_model('isle', 'EventTeamMaterial')
    uuids = Team.objects.filter(system=TeamModel.SYSTEM_PT).values_list('uuid')\
        .annotate(cnt=Count('id')).filter(cnt__gt=1)
    for team_uuid, cnt in uuids:
        teams = Team.objects.filter(uuid=team_uuid).prefetch_related('contexts', 'users')
        if EventTeamMaterial.objects.filter(team__in=teams).count() == 0:
            teams_data = [{
                'contexts': set(t.contexts.all()),
                'users': set(t.users.all()),
                'name': t.name,
            } for t in teams]
            if all([i == teams_data[0] for i in teams_data[1:]]):
                Team.objects.filter(uuid=team_uuid).exclude(id=teams[0].id).delete()
            else:
                raise Exception('Team with uuid %s has duplicates, should be fixed manually' % team_uuid)
        else:
            raise Exception('Team(s) with uuid %s has uploaded files' % team_uuid)


class Migration(migrations.Migration):

    dependencies = [
        ('isle', '0058_auto_20190806_2303'),
    ]

    operations = [
        migrations.RunPython(fix_team_duplicates, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(set_uuid_for_uploads_teams, reverse_code=migrations.RunPython.noop),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('system', 'uuid')},
        ),
    ]
